plugins {
    id 'java'
    id 'jacoco'
}


jacoco {
    toolVersion = "0.8.8"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'org.jsoup:jsoup:1.18.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

task runAndGetBranchesCoverage(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set('core.providers.JaCoCoProvider')
    standardOutput = new ByteArrayOutputStream()
    errorOutput = standardOutput
    doLast {
        def output = standardOutput.toString().trim()
        ext.result = output
        println "Result from getBranchesCoverage(): $output"
    }
}
task checkBranchesCoverage {
    dependsOn runAndGetBranchesCoverage
    doLast {
        def value = runAndGetBranchesCoverage.result.toInteger()
        if (value < 70) {
            throw new GradleException("Branches coverage is less than 70: $value")
        }
    }
}